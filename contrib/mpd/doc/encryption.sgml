<!-- $Id: encryption.sgml,v 1.12 2007/11/10 21:47:26 amotin Exp $ -->
<!-- mpd netgraph enabled user mode PPP daemon -->

<!-- <!DOCTYPE linuxdoc PUBLIC '-//FreeBSD//DTD linuxdoc//EN'> -->

  <sect><heading>Encryption (ECP) layer<label id="encryption"></heading>

  <p>
  This chapter describes commands that configure the Encryption Control
  Protocol (ECP) layer. All of these commands apply to the currently
  active bundle.
  <p>
  To use ECP you should enable encryption at the bundle level.
  To allow encryption to be negotiated you should enable here some of 
  encryption protocols.
  <p>
  <bf>Note:</bf> In PPP, encryption should be handled by the ECP rather than CCP.  
  However, Microsoft combined both compression and encryption 
  into their ``compression'' algorithm (MPPC), which is confusing.

<descrip>

<tag><tt>set ecp key <em>string</em> </tt></tag><p>

Sets the encryption key.

<tag><tt>set ecp accept <em>option ...</em> </tt></tag><p>
<tag><tt>set ecp deny <em>option ...</em> </tt></tag><p>
<tag><tt>set ecp enable <em>option ...</em> </tt></tag><p>
<tag><tt>set ecp disable <em>option ...</em> </tt></tag><p>
<tag><tt>set ecp yes <em>option ...</em> </tt></tag><p>
<tag><tt>set ecp no <em>option ...</em> </tt></tag><p>

These commands configure various ECP options. Each direction of
traffic (transmit and receive) is independent from the other.
All options default to <tt><bf>disable</bf></tt> and <tt><bf>deny</bf></tt>.

The <tt><bf>enable</bf></tt> and <tt><bf>disable</bf></tt> commands determine
whether we desire the corresponding option on received data.
The <tt><bf>accept</bf></tt> and <tt><bf>deny</bf></tt> commands determine
whether we will allow the peer to request the corresponding option
(which we must enable on our transmitted data).

<p>
The <bf><tt>yes</tt></bf> command is the same as
<tt><bf>enable</bf></tt> and <tt><bf>accept</bf></tt>.
The <bf><tt>no</tt></bf> command is the same as
<tt><bf>disable</bf></tt> and <tt><bf>deny</bf></tt>.

</descrip>

<p>
The options available at the ECP layer are:

<descrip>

<tag><tt>dese-bis</tt></tag>

This option enables DESE-bis (rfc 2419) encryption.
This algorithm implemented in user-level, so require much CPU power
on fast (>10Mbit/s) links.

The default is disable.

<tag><tt>dese-old</tt></tag>

This option enables DESE (rfc 1969) encryption.
This algorithm implemented in user-level, so require much CPU power
on fast (>10Mbit/s) links.
<P>
<bf>Note:</bf> DESE protocol is deprecated. Because of data padding 
to the next 8 octets boundary, required by block nature of DES encryption, 
dese-old option can have interoperability issues with other protocols 
which work over it. As example, it is incompatible with Predictor-1 and 
Deflate compressions.

The default is disable.

</descrip>

</p>



