setval {
	PSKDIR		"/etc/racoon2/psk";
	CERTDIR		"/etc/racoon2/cert";
	MY_FQDN		"myname.example.com";
	PEERS_FQDN	"peersname.example.com";
	PRESHRD_KEY	"test.psk";
#	MY_PUB_KEY      "my_pub.pem";
#	MY_PRI_KEY      "my_pri.pem";
#	PEERS_PUB_KEY   "peers_pub.pem";
	MY_IPADDRESS	"192.168.0.1";
	PEERS_IPADDRESS	"192.168.1.1";
	MY_NET		"10.0.0.0/24";
	PEERS_NET	"10.0.1.0/24";
	MY_GWADDRESS	"192.168.0.1";
	PEERS_GWADDRESS	"192.168.1.1";
	CP_ADDRPL4_START  "10.7.73.128";
	CP_ADDRPL4_END    "10.7.73.254";
#	CP_ADDRPL6_START  "fd01::1000";
#	CP_ADDRPL6_END    "fd02::2000";
	CP_DNS          "10.7.73.1";
	CP_DHCP         "10.7.73.1";
	CP_APPVER       "Racoon2 iked";

### Scripts
        ## IKEv2
	IKESAUP_SCR	"/etc/racoon2/hook/ikesa-up";
	IKESADOWN_SCR	"/etc/racoon2/hook/ikesa-down";
	CHILDUP_SCR	"/etc/racoon2/hook/child-up";
	CHILDOWN_SCR	"/etc/racoon2/hook/child-down";
	IKESAREKEY_SCR	"/etc/racoon2/hook/ikesa-rekey";
	CHILDREKEY_SCR	"/etc/racoon2/hook/child-rekey";
	MIGRATION_SCR	"/etc/racoon2/hook/migration";
	## IKEv1
	PH1UP_SCR	"/etc/racoon2/hook/ph1-up";
	PH1DOWN_SCR	"/etc/racoon2/hook/ph1-down";
};

# interface info
interface
{
	ike {
		MY_IP port 500;
## Uncomment to enable NAT-T (both initiator and responder)
#		MY_IP port 4500;
	};
	spmd {
		unix "/var/run/racoon2/spmif";
	};
	spmd_password "/etc/racoon2/spmd.pwd";
};

resolver
{
	resolver off;
#	resolver on;
#	nameserver {
#		WWW.XXX.YYY.ZZZ port 53;
#	};
#	dns_query {
#		127.0.0.1 port 53;
#		::1 port 53;
#	};
};


default
{
	remote {
		acceptable_kmp { ikev2; ikev1; };
		ikev1 {
			logmode normal;
			kmp_sa_lifetime_time 600 sec;
			kmp_sa_lifetime_byte infinite;
			interval_to_send 10 sec;
			times_per_send 1;
			ipsec_sa_nego_time_limit 40 sec;
			kmp_enc_alg { aes128_cbc; 3des_cbc; };
			kmp_hash_alg { sha1; md5; };
			kmp_dh_group { modp2048; modp1024; };
			kmp_auth_method { psk; };
			random_pad_content on;
			# max_padlen 50 bytes;
		};
		ikev2 {
			logmode normal;
			kmp_sa_lifetime_time infinite;
			kmp_sa_lifetime_byte infinite;
			max_retry_to_send 3;
			interval_to_send 10 sec;
			times_per_send 1;
			kmp_sa_nego_time_limit 60 sec;
			ipsec_sa_nego_time_limit 40 sec;
			kmp_enc_alg { aes128_cbc; 3des_cbc; };
			kmp_prf_alg { hmac_md5; hmac_sha1; aes_xcbc; };
			kmp_hash_alg { hmac_sha1; hmac_md5; };
			kmp_dh_group { modp3072; modp2048; modp1024;  };
			kmp_auth_method { psk; };
			random_pad_content on;
			random_padlen on;
			max_padlen 50 bytes;
		};
	};

	policy {
		ipsec_mode transport;
		ipsec_level require;
	};

	ipsec {
		ipsec_sa_lifetime_time infinite;
		ipsec_sa_lifetime_byte infinite;
	};

	sa {
		esp_enc_alg { aes128_cbc; 3des_cbc; };
		esp_auth_alg { hmac_sha1; hmac_md5; };
	};
};
ipsec ipsec_ah_esp {
	ipsec_sa_lifetime_time 28800 sec;
	sa_index { ah_01; esp_01; };
};
ipsec ipsec_esp {
	ipsec_sa_lifetime_time 28800 sec;
	sa_index esp_01;
};

sa ah_01 {
	sa_protocol ah;
	ah_auth_alg { hmac_sha1; hmac_md5; };
};
sa esp_01 {
	sa_protocol esp;
	esp_enc_alg { aes128_cbc; 3des_cbc; };
	esp_auth_alg { hmac_sha1; hmac_md5; };
};




#############################################################
### Transport mode IKEv2 or IKEv1
## include "/etc/racoon2/transport_ike.conf";
## $Id: transport_ike.conf,v 1.7 2007/12/26 08:00:53 sinoue Exp $
## ike transport mode (esp/tcp)
#remote ike_trans_remote {
#	acceptable_kmp { ikev2; };
#	ikev2 {
#		my_id fqdn "${MY_FQDN}";
#		peers_id fqdn "${PEERS_FQDN}";
#		peers_ipaddr "${PEERS_IPADDRESS}" port 500;
#		## Use Preshared Key
#		kmp_auth_method { psk; };
#		pre_shared_key "${PSKDIR}/${PRESHRD_KEY}";
#		## Use Certificate
#		#kmp_auth_method { rsasig; };
#		#my_public_key x509pem "${CERTDIR}/${MY_PUB_KEY}" "${CERTDIR}/${MY_PRI_KEY}";
#		#peers_public_key x509pem "${CERTDIR}/${PEERS_PUB_KEY}" "";
#	};
#	selector_index ike_trans_sel_in;
#};
#
#selector ike_trans_sel_out {
#	direction outbound;
#	src "${MY_IPADDRESS}";
#	dst "${PEERS_IPADDRESS}";
#	upper_layer_protocol "tcp";
#	policy_index ike_trans_policy;
#};
#
#selector ike_trans_sel_in {
#	direction inbound;
#	dst "${MY_IPADDRESS}";
#	src "${PEERS_IPADDRESS}";
#	upper_layer_protocol "tcp";
#	policy_index ike_trans_policy;
#};
#
#policy ike_trans_policy {
#	action auto_ipsec;
#	remote_index ike_trans_remote;
#	ipsec_mode transport;
#	ipsec_index { ipsec_esp; };
#	ipsec_level require;
#};
#


#############################################################
### Tunnel mode IKEv2 or IKEv1 (initiator and responder)
## include "/etc/racoon2/tunnel_ike.conf";
## $Id: tunnel_ike.conf,v 1.15 2007/12/25 09:49:16 mk Exp $
## ike tunnel mode (esp) (includes a nat-t tunnel mode initiator side)
#remote ike_tun_remote {
#	acceptable_kmp { ikev2; ikev1; };
#	ikev2 {
#		my_id fqdn "${MY_FQDN}";
#		peers_id fqdn "${PEERS_FQDN}";
#		peers_ipaddr "${PEERS_GWADDRESS}" port 500;
#		kmp_enc_alg { aes192_cbc; aes128_cbc; 3des_cbc; };
#		kmp_prf_alg { hmac_md5; hmac_sha1; aes_xcbc; };
#		kmp_hash_alg { hmac_sha1; };
#		kmp_dh_group { modp2048; };
#		## Use Preshared Key
#		kmp_auth_method { psk; };
#		pre_shared_key "${PSKDIR}/${PRESHRD_KEY}";
#		## Use Certificate
#		#kmp_auth_method { rsasig; };
#		#my_public_key x509pem "${CERTDIR}/${MY_PUB_KEY}" "${CERTDIR}/${MY_PRI_KEY}";
#		#peers_public_key x509pem "${CERTDIR}/${PEERS_PUB_KEY}" "";
#                ## CP: provide to the remote node (server side)
#		#provide {
#		#	addresspool ike_tun_pool;
#		#	dns { "${CP_DNS}"; };
#		#	dhcp { "${CP_DHCP}"; };
#		#	application_version "${CP_APPVER}";
#		#};
#		## CP: request to the remote node (client side)
#		#request { ip4_dns; ip4_dhcp; application_version; };
#		## run scripts
#		#script {
#		#	ike_sa_up    "${IKESAUP_SCR}";    #== IKE_SA up
#		#	ike_sa_down  "${IKESADOWN_SCR}";  #== IKE_SA down
#		#	ike_sa_rekey "${IKESAREKEY_SCR}"; #== IKE_SA rekey
#		#	child_up     "${CHILDUP_SCR}";    #== CHILD_SA up
#		#	child_down   "${CHILDOWN_SCR}";   #== CHILD_SA down
#		#	child_rekey  "${CHILDREKEY_SCR}"; #== CHILD_SA rekey
#		#	migration    "${MIGRATION_SCR}";  #== issueing MIP6 MIGRATE
#		#};
#	};
#	ikev1 {
#		my_id ipaddr "${MY_GWADDRESS}";
#		peers_id ipaddr "${PEERS_GWADDRESS}";
#		peers_ipaddr "${PEERS_GWADDRESS}" port 500;
#		kmp_enc_alg { aes192_cbc; aes128_cbc; 3des_cbc; };
#		kmp_hash_alg { sha1; };
#		kmp_dh_group { modp2048; };
#		## Use Preshared Key
#		kmp_auth_method { psk; };
#		pre_shared_key "${PSKDIR}/${PRESHRD_KEY}";
#		## Use Certificate
#		#kmp_auth_method { rsasig; };
#		#my_public_key x509pem "${CERTDIR}/${MY_PUB_KEY}" "${CERTDIR}/${MY_PRI_KEY}";
#		#peers_public_key x509pem "${CERTDIR}/${PEERS_PUB_KEY}" "";
#		## run scripts
#		#script {
#		#	phase1_up   "${PH1UP_SCR}";      #== Phase1 up
#		#	phase1_down "${PH1DOWN_SCR}";    #== Phase1 down
#		#};
#	};
#	selector_index ike_tun_sel_in;
#};
#
### address pool for CP
##addresspool ike_tun_pool {
##	"${CP_ADDRPL4_START}" - "${CP_ADDRPL4_END}";
##	"${CP_ADDRPL6_START}" - "${CP_ADDRPL6_END}";
##};
#
#selector ike_tun_sel_out {
#	direction outbound;
#	src "${MY_NET}";
#	dst "${PEERS_NET}";
#	policy_index ike_tun_policy;
#};
#
#selector ike_tun_sel_in {
#	direction inbound;
#	dst "${MY_NET}";
#	src "${PEERS_NET}";
#	policy_index ike_tun_policy;
#};
#
#policy ike_tun_policy {
#	action auto_ipsec;
#	remote_index ike_tun_remote;
#	ipsec_mode tunnel;
#	ipsec_index { ipsec_esp; };
#	ipsec_level require;
#	peers_sa_ipaddr "${PEERS_GWADDRESS}";
#	my_sa_ipaddr "${MY_GWADDRESS}";
#};
#
#


#############################################################
### Tunnel mode IKEv2 (responder; NAT-T support)
### Enable this if you're a responder in global net and
### the peer is an initiator behind NAT.
## include "/etc/racoon2/tunnel_ike_natt.conf";
#
## ike tunnel mode (esp) nat-t (responder side)
#remote ike_tun_natt_remote {
#	acceptable_kmp { ikev2; };
#	ikev2 {
#		my_id fqdn "${MY_FQDN}";
#		peers_id fqdn "${PEERS_FQDN}";
#		peers_ipaddr IP_RW;
#		kmp_enc_alg { aes192_cbc; aes128_cbc; 3des_cbc; };
#		kmp_prf_alg { hmac_md5; hmac_sha1; aes_xcbc; };
#		kmp_hash_alg { hmac_sha1; };
#		kmp_dh_group { modp2048; };
#		## Use Preshared Key
#		kmp_auth_method { psk; };
#		pre_shared_key "${PSKDIR}/${PRESHRD_KEY}";
#		## Use Certificate
#		#kmp_auth_method { rsasig; };
#		#my_public_key x509pem "${CERTDIR}/${MY_PUB_KEY}" "${CERTDIR}/${MY_PRI_KEY}";
#		#peers_public_key x509pem "${CERTDIR}/${PEERS_PUB_KEY}" "";
#                ## CP: provide to the remote node (server side)
#		#provide {
#		#	addresspool ike_tun_pool;
#		#	dns { "${CP_DNS}"; };
#		#	dhcp { "${CP_DHCP}"; };
#		#	application_version "${CP_APPVER}";
#		#};
#	};
#	selector_index ike_tun_natt_sel_in;
#};
#
#selector ike_tun_natt_sel_out {
#	direction outbound;
#	src "${MY_NET}";
#	dst "${PEERS_NET}";
#	policy_index ike_tun_natt_policy;
#};
#
#selector ike_tun_natt_sel_in {
#	direction inbound;
#	dst "${MY_NET}";
#	src "${PEERS_NET}";
#	policy_index ike_tun_natt_policy;
#};
#
#policy ike_tun_natt_policy {
#	action auto_ipsec;
#	remote_index ike_tun_natt_remote;
#	ipsec_mode tunnel;
#	ipsec_index { ipsec_esp; };
#	ipsec_level require;
#	peers_sa_ipaddr IP_RW;
#	my_sa_ipaddr "${MY_GWADDRESS}";
#};
#

