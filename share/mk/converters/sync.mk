CONVERT_FROM_SYNC:=${NEW_CURRENT_PACKING_FILE_NAME}
CONVERT_TO_SYNC:=${CURRENT_PACKING_FILE_NAME}

PACKING_KERNEL_ROUND?=${FLASH_BLOCK_SIZE}
.if !defined(PACKING_KERNEL_ROUND) || empty(PACKING_KERNEL_ROUND)
PACKING_KERNEL_ROUND=0x10000
.endif
IMAGE_HEADER_EXTRA?=0


${CONVERT_TO_SYNC}:		${CONVERT_FROM_SYNC}
	@echo ========== Round up by ${PACKING_KERNEL_ROUND} ${CONVERT_FROM_SYNC} ============
	echo "PACKING_KERNEL_ROUND=\"${PACKING_KERNEL_ROUND}\" FLASH_BLOCK_SIZE=\"${FLASH_BLOCK_SIZE}\"" ; \
	BS_MASK=$$(( ${PACKING_KERNEL_ROUND} - 1 ))					; \
	echo BS_MASK=$${BS_MASK} ; \
	BS_MASK_INV=$$(( ~$${BS_MASK} ))						; \
	echo BS_MASK_INV=$${BS_MASK_INV} ; \
	CONVERT_SYNC_OLD_SIZE=`stat -f %z "${CONVERT_FROM_SYNC}"`			; \
	_NEW_SIZE_W_HDR=$$(( $${CONVERT_SYNC_OLD_SIZE} + ${IMAGE_HEADER_EXTRA} ))		; \
	echo _NEW_SIZE_W_HDR=$${_NEW_SIZE_W_HDR} ; \
	CONVERT_SYNC_NEW_SIZE=$$(( (($${_NEW_SIZE_W_HDR} + $${BS_MASK} ) & $${BS_MASK_INV}) - ${IMAGE_HEADER_EXTRA} )); \
	cp "${CONVERT_FROM_SYNC}" "${CONVERT_TO_SYNC}"					; \
	echo "Old size $${CONVERT_SYNC_OLD_SIZE} New size $${CONVERT_SYNC_NEW_SIZE}"	; \
	truncate -s $${CONVERT_SYNC_NEW_SIZE} "${CONVERT_TO_SYNC}"
